[project]
name = "pymeter"
readme = "README.md"
version = "0.1.0"
description = ""
requires-python = ">= 3.11"
authors = [{ name = "Kelvin.Ye", email = "testmankelvin@163.com" }]
dependencies = [
    "orjson==3.10.11",
    "jsonpath==0.82.2",
    "xmltodict==0.14.2",
    "sqlalchemy==2.0.36",
    "pyodbc==5.2.0",
    "cx-oracle==8.3.0",
    "psycopg2-binary==2.9.10",
    "mysql-connector-python==9.1.0",
    "sshtunnel==0.4.0",
    "pycryptodome==3.21.0",
    "python-engineio==4.10.1",
    "python-socketio==5.11.4",
    "arrow==1.3.0",
    "faker==30.8.2",
    "httpx==0.27.2",
    "json5==0.9.25",
    "bidict==0.23.1",
    "loguru==0.7.2",
    "gevent==24.10.3",
    "uvloop==0.21.0",
    "ulid-py==1.1.0",
    "pytypes==1.0b10",
    "tabulate==0.9.0",
    "requests==2.32.3",
    "json_repair==0.30.1",
]

[tool.uv]
dev-dependencies = [
    "pip",
    "ruff",
    "pre-commit",
    "pytest",
    "pytest-html",
    "pytest-asyncio",
    "flask",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
exclude = []

[tool.hatch.build.targets.wheel]
packages = ["pymeter"]

[tool.ruff]
line-length = 120
src = ["pymeter"]
select = [
    "F",    # pyflakes
    "UP",   # pyupgrade
    "E",    # pycodestyle-error
    "W",    # pycodestyle-warning
    "D",    # pydocstyle
    "I",    # isort
]
ignore = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D107",
    "D415"
]
exclude = [
    "__pycache__",
    ".venv",
    ".vscode",
    "docs",
    "scripts",
]
extend-include = ["*.ipynb"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.isort]
force-single-line = true
lines-after-imports = 2
lines-between-types = 1

[tool.ruff.format]
line-ending = "lf"
quote-style = "single"
skip-magic-trailing-comma = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
minversion = "6.0"
testpaths = "tests"
addopts = [
    "--color=auto",
    "--capture=tee-sys",
    "--code-highlight=yes",
    "--disable-warnings",
    "--html=report.html",
    "--self-contained-html"
]
log_cli = true
log_level = "DEBUG"
log_format = "[%(asctime)s][%(levelname)s][%(name)s.%(funcName)s:%(lineno)d] %(message)s"
filterwarnings = ["error"]
required_plugins = ["pytest-html"]

[[tool.uv.index]]
name = "aliyun"
url = "https://mirrors.aliyun.com/pypi/simple/"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"